/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.buckzy.common.service.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the CustomUser service. Represents a row in the &quot;BUCKZY_CustomUser&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.buckzy.common.service.model.impl.CustomUserModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.buckzy.common.service.model.impl.CustomUserImpl}.
 * </p>
 *
 * @author Sandip.Patel
 * @see CustomUser
 * @see com.buckzy.common.service.model.impl.CustomUserImpl
 * @see com.buckzy.common.service.model.impl.CustomUserModelImpl
 * @generated
 */
@ProviderType
public interface CustomUserModel extends BaseModel<CustomUser> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a custom user model instance should use the {@link CustomUser} interface instead.
	 */

	/**
	 * Returns the primary key of this custom user.
	 *
	 * @return the primary key of this custom user
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this custom user.
	 *
	 * @param primaryKey the primary key of this custom user
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the custom user ID of this custom user.
	 *
	 * @return the custom user ID of this custom user
	 */
	public long getCustomUserId();

	/**
	 * Sets the custom user ID of this custom user.
	 *
	 * @param customUserId the custom user ID of this custom user
	 */
	public void setCustomUserId(long customUserId);

	/**
	 * Returns the custom user uuid of this custom user.
	 *
	 * @return the custom user uuid of this custom user
	 */
	public String getCustomUserUuid();

	/**
	 * Sets the custom user uuid of this custom user.
	 *
	 * @param customUserUuid the custom user uuid of this custom user
	 */
	public void setCustomUserUuid(String customUserUuid);

	/**
	 * Returns the user ID of this custom user.
	 *
	 * @return the user ID of this custom user
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this custom user.
	 *
	 * @param userId the user ID of this custom user
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this custom user.
	 *
	 * @return the user uuid of this custom user
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this custom user.
	 *
	 * @param userUuid the user uuid of this custom user
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the party ID of this custom user.
	 *
	 * @return the party ID of this custom user
	 */
	public long getPartyId();

	/**
	 * Sets the party ID of this custom user.
	 *
	 * @param partyId the party ID of this custom user
	 */
	public void setPartyId(long partyId);

	/**
	 * Returns the party user ID of this custom user.
	 *
	 * @return the party user ID of this custom user
	 */
	public long getPartyUserId();

	/**
	 * Sets the party user ID of this custom user.
	 *
	 * @param partyUserId the party user ID of this custom user
	 */
	public void setPartyUserId(long partyUserId);

	/**
	 * Returns the party user uuid of this custom user.
	 *
	 * @return the party user uuid of this custom user
	 */
	public String getPartyUserUuid();

	/**
	 * Sets the party user uuid of this custom user.
	 *
	 * @param partyUserUuid the party user uuid of this custom user
	 */
	public void setPartyUserUuid(String partyUserUuid);

	/**
	 * Returns the mobile no of this custom user.
	 *
	 * @return the mobile no of this custom user
	 */
	@AutoEscape
	public String getMobileNo();

	/**
	 * Sets the mobile no of this custom user.
	 *
	 * @param mobileNo the mobile no of this custom user
	 */
	public void setMobileNo(String mobileNo);

	/**
	 * Returns the mob country code of this custom user.
	 *
	 * @return the mob country code of this custom user
	 */
	@AutoEscape
	public String getMobCountryCode();

	/**
	 * Sets the mob country code of this custom user.
	 *
	 * @param mobCountryCode the mob country code of this custom user
	 */
	public void setMobCountryCode(String mobCountryCode);

	/**
	 * Returns the device info of this custom user.
	 *
	 * @return the device info of this custom user
	 */
	@AutoEscape
	public String getDeviceInfo();

	/**
	 * Sets the device info of this custom user.
	 *
	 * @param deviceInfo the device info of this custom user
	 */
	public void setDeviceInfo(String deviceInfo);

	/**
	 * Returns the document verified of this custom user.
	 *
	 * @return the document verified of this custom user
	 */
	public boolean getDocumentVerified();

	/**
	 * Returns <code>true</code> if this custom user is document verified.
	 *
	 * @return <code>true</code> if this custom user is document verified; <code>false</code> otherwise
	 */
	public boolean isDocumentVerified();

	/**
	 * Sets whether this custom user is document verified.
	 *
	 * @param documentVerified the document verified of this custom user
	 */
	public void setDocumentVerified(boolean documentVerified);

	/**
	 * Returns the account completed of this custom user.
	 *
	 * @return the account completed of this custom user
	 */
	public boolean getAccountCompleted();

	/**
	 * Returns <code>true</code> if this custom user is account completed.
	 *
	 * @return <code>true</code> if this custom user is account completed; <code>false</code> otherwise
	 */
	public boolean isAccountCompleted();

	/**
	 * Sets whether this custom user is account completed.
	 *
	 * @param accountCompleted the account completed of this custom user
	 */
	public void setAccountCompleted(boolean accountCompleted);

	/**
	 * Returns the profile complete of this custom user.
	 *
	 * @return the profile complete of this custom user
	 */
	public boolean getProfileComplete();

	/**
	 * Returns <code>true</code> if this custom user is profile complete.
	 *
	 * @return <code>true</code> if this custom user is profile complete; <code>false</code> otherwise
	 */
	public boolean isProfileComplete();

	/**
	 * Sets whether this custom user is profile complete.
	 *
	 * @param profileComplete the profile complete of this custom user
	 */
	public void setProfileComplete(boolean profileComplete);

	/**
	 * Returns the social login of this custom user.
	 *
	 * @return the social login of this custom user
	 */
	public boolean getSocialLogin();

	/**
	 * Returns <code>true</code> if this custom user is social login.
	 *
	 * @return <code>true</code> if this custom user is social login; <code>false</code> otherwise
	 */
	public boolean isSocialLogin();

	/**
	 * Sets whether this custom user is social login.
	 *
	 * @param socialLogin the social login of this custom user
	 */
	public void setSocialLogin(boolean socialLogin);

	/**
	 * Returns the rest pass of this custom user.
	 *
	 * @return the rest pass of this custom user
	 */
	@AutoEscape
	public String getRestPass();

	/**
	 * Sets the rest pass of this custom user.
	 *
	 * @param restPass the rest pass of this custom user
	 */
	public void setRestPass(String restPass);

	/**
	 * Returns the create date of this custom user.
	 *
	 * @return the create date of this custom user
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this custom user.
	 *
	 * @param createDate the create date of this custom user
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the created by of this custom user.
	 *
	 * @return the created by of this custom user
	 */
	public long getCreatedBy();

	/**
	 * Sets the created by of this custom user.
	 *
	 * @param createdBy the created by of this custom user
	 */
	public void setCreatedBy(long createdBy);

	/**
	 * Returns the modified date of this custom user.
	 *
	 * @return the modified date of this custom user
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this custom user.
	 *
	 * @param modifiedDate the modified date of this custom user
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the modified by of this custom user.
	 *
	 * @return the modified by of this custom user
	 */
	public long getModifiedBy();

	/**
	 * Sets the modified by of this custom user.
	 *
	 * @param modifiedBy the modified by of this custom user
	 */
	public void setModifiedBy(long modifiedBy);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(CustomUser customUser);

	@Override
	public int hashCode();

	@Override
	public CacheModel<CustomUser> toCacheModel();

	@Override
	public CustomUser toEscapedModel();

	@Override
	public CustomUser toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}